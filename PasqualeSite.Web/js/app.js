// Generated by IcedCoffeeScript 108.0.9
(function() {
  var namespace;

  namespace = function(name) {
    if (!window.PasqualeSite) {
      window.PasqualeSite = {};
    }
    return PasqualeSite[name] = PasqualeSite[name] || {};
  };

  namespace("ViewModels");

  PasqualeSite.KnockoutModel = (function() {
    function KnockoutModel(JSON, ViewModel) {
      JSON.binding = true;
      if (ViewModel) {
        this.Model = ViewModel;
      }
      ko.mapping.merge.fromJS(this.Model, JSON);
      ko.applyBindings(this.Model);
      this.Model;
    }

    return KnockoutModel;

  })();

  PasqualeSite.ViewModels.PostsViewModel = (function() {
    function PostsViewModel() {
      this.Posts = ko.observableArray([]).withMergeConstructor(PasqualeSite.ViewModels.PostViewModel, true);
      this.SelectedPost = ko.observableArray([]).withMergeConstructor(PasqualeSite.ViewModels.PostViewModel, true);
      this.NewPost = ko.observable(new PasqualeSite.ViewModels.PostViewModel());
      this.GridOptions = {
        data: this.Posts,
        columnDefs: [
          {
            field: 'Id',
            displayName: 'Id',
            width: 90
          }, {
            field: 'Title',
            displayName: 'Title',
            width: 80
          }, {
            field: 'Teaser',
            cellClass: 'Teaser',
            headerClass: 'Teaser'
          }, {
            field: 'DateCreated',
            displayName: 'Date Created'
          }, {
            field: 'DateModified',
            displayName: 'Date Modified'
          }, {
            field: 'isFeatured',
            displayName: 'Featured'
          }, {
            field: 'Priority',
            displayName: 'Priority'
          }
        ],
        enablePaging: true,
        selectedItems: this.SelectedPost,
        multiSelect: false,
        afterSelectionChange: (function(_this) {
          return function() {
            return CKEDITOR.instances['content'].setData(_this.SelectedPost()[0].PostContent());
          };
        })(this),
        pagingOptions: {
          currentPage: ko.observable(1),
          pageSize: ko.observable(30),
          pageSizes: ko.observableArray([30, 60, 90]),
          totalServerItems: ko.observable(0)
        }
      };
    }

    return PostsViewModel;

  })();

  PasqualeSite.ViewModels.PostViewModel = (function() {
    function PostViewModel() {
      this.Id = ko.observable();
      this.Title = ko.observable();
      this.Teaser = ko.observable();
      this.PostContent = ko.observable("");
      this.DateCreated = ko.observable();
      this.DateModified = ko.observable();
      this.IsFeatured = ko.observable();
      this.IsActive = ko.observable();
      this.Priority = ko.observable();
      this.User = ko.observable(new PasqualeSite.ViewModels.AppUser());
      this.Image = ko.observable(new PasqualeSite.ViewModels.PostImageViewModel());
      this.FeaturePost = (function(_this) {
        return function() {
          return _this.IsFeatured(true);
        };
      })(this);
      this.UnfeaturePost = (function(_this) {
        return function() {
          return _this.IsFeatured(false);
        };
      })(this);
      this.EnablePost = (function(_this) {
        return function() {
          return _this.IsActive(true);
        };
      })(this);
      this.DisablePost = (function(_this) {
        return function() {
          return _this.IsActive(false);
        };
      })(this);
      this.SavePost = (function(_this) {
        return function() {
          var newPost;
          newPost = {
            Id: _this.Id(),
            Title: _this.Title(),
            Teaser: _this.Teaser(),
            PostContent: _this.PostContent(),
            DateCreated: _this.DateCreated(),
            DateModified: _this.DateModified(),
            IsFeatured: _this.IsFeatured(),
            IsActive: _this.IsActive(),
            Priority: _this.Priority(),
            ImageId: _this.Image() ? _this.Image().Id() : null
          };
          return $.ajax({
            url: approot + "Admin/SavePost",
            data: {
              newPost: newPost
            },
            type: "POST",
            success: function(data) {
              return console.log(data);
            }
          });
        };
      })(this);
    }

    return PostViewModel;

  })();

  PasqualeSite.ViewModels.PostImageViewModel = (function() {
    function PostImageViewModel() {
      this.Id = ko.observable();
      this.Path = ko.observable();
      this.Description = ko.observable();
    }

    return PostImageViewModel;

  })();

  PasqualeSite.ViewModels.AppUser = (function() {
    function AppUser() {
      this.Id = ko.observable();
      this.FirstName = ko.observable();
      this.LastName = ko.observable();
      this.UserName = ko.observable();
      this.Email = ko.observable();
      this.EmailConfirmed = ko.observable();
      this.Roles = ko.observableArray([]);
    }

    return AppUser;

  })();

  $(function() {});

}).call(this);
